Bingo!
Write a program that will simulate simple variant of BINGO game. It features
processes (parent and children) and two message queues. Parent process creates
n sub-processes (0<n<100, n is a parameter) and two message queues. First one
pout is used by parent to send random numbers (range [0-9]) to children at
1sec intervals. The second one pin is for children to communicate their
winnings and exits. Children compete over the numbers from pout - one digit
goes to only one child (not all of them). Sub-process reads the digit from the
queue, compare it to its expected number (random number E chosen at the start)
and if they match send a special "BINGO" message via second queue pin along
with the winning number. After "bingo" it terminates. Each child process must
choose random limit of numbers it is going to read from the queue and compare.
Once the limit is reached without "bingo" it sends a special "GOODBYE" message
via second queue pin along with the terminating process number (its n number)
and terminates. Parent process must asynchronously to sending numbers read the
messages on the second queue (pin) and display proper information on the
screen. Once all child processes are terminated parent process removes the
queues and exits. Single message size is limited to 1 byte only!

